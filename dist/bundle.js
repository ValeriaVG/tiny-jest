!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).tinyJest=t()}}((function(){var t={},e=this&&this.__awaiter||function(t,e,i,n){return new(i||(i=Promise))((function(o,r){function s(t){try{u(n.next(t))}catch(e){r(e)}}function f(t){try{u(n.throw(t))}catch(e){r(e)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(s,f)}u((n=n.apply(t,e||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(t){this.suite=[],this.results=[],this.it=(t,e)=>{this.suite.push({title:t,fn:e})},this.xit=(t,e)=>{this.suite.push({title:t})},this.run=()=>e(this,void 0,void 0,(function*(){this.results=[];for(let e of this.suite)if(e.fn)try{yield e.fn(),this.results.push({title:e.title,passed:!0})}catch(t){this.results.push({title:e.title,error:t,passed:!1})}else this.results.push({title:e.title,skipped:!0});return this.results})),this.title=t}};var i={};Object.defineProperty(i,"__esModule",{value:!0});class n extends Error{constructor(t,e,i,n){super(n),this.extensions={matcher:t,expected:e,actual:i}}}const o={toBe:(t,e)=>e!==t&&`Expected ${JSON.stringify(t)} to be ${JSON.stringify(e)}`,toEqual:(t,e)=>e!=t&&`Expected ${JSON.stringify(t)} to equal ${JSON.stringify(e)}`,toBeTruthy:t=>!t&&`Expected ${JSON.stringify(t)} to be truthy`,toBeFalsy:t=>!!t&&`Expected ${JSON.stringify(t)} to be falsy`,toMatchObject:(t,e)=>{for(let i in e){if(typeof t[i]!=typeof e[i])return`Types mismatch for ${i}: ${typeof t[i]} != ${typeof e[i]}`;if("object"!=typeof e[i]){if(o.toBe(t[i],e[i]))return`Mismatched "${i}": ${JSON.stringify(t[i])} != ${JSON.stringify(e[i])}`;continue}const n=o.toMatchObject(t[i],e[i]);if(n)return n}return!1},toThrow:(t,e)=>{try{return t(),`Expected ${t.toString()} to throw error ${e&&" matching "+e.toString()}`}catch(i){return!(!e||e.test(i.toString()))&&`Expected ${t.toString()} to throw error ${e&&` matching ${e.toString()}, but got ${i.toString()} instead`}`}}};i.default=function(t){const e={not:{}};return Object.keys(o).forEach(i=>{e[i]=e=>{const r=o[i](t,e);if(r)throw new n(i,e,t,r)},e.not[i]=e=>{if(!1===o[i](t,e))throw new n(i,e,t,`Expected ${JSON.stringify(t)} not ${i.replace(/[A-Z]/g,t=>" "+t.toLowerCase())}${void 0!==e?" "+JSON.stringify(e):""}`)}}),e};var r={};Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(t){t.forEach(({title:t,passed:e,skipped:i,error:n})=>e?console.info("\x1b[32m","\u2713 "+t):i?console.info("\x1b[33m","\u25a1 "+t):e?void 0:console.error("\x1b[31m","\ud800\udd02 "+t,"\n  Failed:",n.message)),console.log("\x1b[0m")};var s={};return Object.defineProperty(s,"__esModule",{value:!0}),Object.defineProperty(s,"Test",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(s,"expect",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(s,"prettify",{enumerable:!0,get:function(){return r.default}}),s}));