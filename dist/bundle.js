(()=>{var g=Object.defineProperty;var $=e=>g(e,"__esModule",{value:!0});var O=(e,t)=>{$(e);for(var r in t)g(e,r,{get:t[r],enumerable:!0})};var E=(e,t,r)=>new Promise((n,s)=>{var a=o=>{try{y(r.next(o))}catch(u){s(u)}},x=o=>{try{y(r.throw(o))}catch(u){s(u)}},y=o=>o.done?n(o.value):Promise.resolve(o.value).then(a,x);y((r=r.apply(e,t)).next())});var c={};O(c,{Test:()=>f,expect:()=>h,prettify:()=>l});var f=class{constructor(t){this.suite=[];this.results=[];this._before=[];this._after=[];this.it=(t,r)=>{this.suite.push({title:t,fn:r})};this.xit=(t,r)=>{this.suite.push({title:t})};this.run=()=>E(this,null,function*(){this.results=[];try{yield Promise.all(this._before.map(t=>t()))}catch(t){return[{title:this.title,error:t,passed:!1}]}for(let t of this.suite){if(!t.fn){this.results.push({title:t.title,skipped:!0});continue}try{yield t.fn(),this.results.push({title:t.title,passed:!0})}catch(r){this.results.push({title:t.title,error:r,passed:!1})}}try{yield Promise.all(this._after.map(t=>t()))}catch(t){console.error(t)}return this.results});this.before=t=>{this._before.push(t)};this.after=t=>{this._after.push(t)};this.title=t!=null?t:""}};var p=class extends Error{constructor(t,r,n,s){super(s);this.extensions={matcher:t,expected:r,actual:n}}},i={toBe:(e,t)=>t===e?!1:`Expected ${JSON.stringify(e)} to be ${JSON.stringify(t)}`,toEqual:(e,t)=>t==e?!1:`Expected ${JSON.stringify(e)} to equal ${JSON.stringify(t)}`,toBeTruthy:e=>e?!1:`Expected ${JSON.stringify(e)} to be truthy`,toBeFalsy:e=>e?`Expected ${JSON.stringify(e)} to be falsy`:!1,toMatchObject:(e,t)=>{let r=`${JSON.stringify(e)} does not match ${JSON.stringify(t)}`;if(typeof e!=typeof t||Array.isArray(e)!==Array.isArray(t))return r;for(let n in t){if(typeof e[n]!=typeof t[n])return`${r}:
Types mismatch for ${n}: ${typeof e[n]} != ${typeof t[n]}`;if(typeof t[n]!="object"){if(i.toBe(e[n],t[n]))return`Mismatched "${n}": ${JSON.stringify(e[n])} != ${JSON.stringify(t[n])}`;continue}let s=i.toMatchObject(e[n],t[n]);if(s)return s}return!1},toThrow:(e,t)=>{try{return e(),`Expected ${e.toString()} to throw error ${t&&` matching ${t.toString()}`}`}catch(r){return!t||t.test(r.toString())?!1:`Expected ${e.toString()} to throw error ${t&&` matching ${t.toString()}, but got ${r.toString()} instead`}`}},toBeGreaterThan:(e,t)=>e>t?!1:`Expected ${JSON.stringify(e)} to be greater than ${JSON.stringify(t)}`,toBeGreaterThanOrEqual:(e,t)=>e>=t?!1:`Expected ${JSON.stringify(e)} to be greater than or equal ${JSON.stringify(t)}`,toBeLessThan:(e,t)=>e<t?!1:`Expected ${JSON.stringify(e)} to be less than ${JSON.stringify(t)}`,toBeLessThanOrEqual:(e,t)=>e<=t?!1:`Expected ${JSON.stringify(e)} to be less than or equal ${JSON.stringify(t)}`};function h(e){let t={not:{}};return Object.keys(i).forEach(r=>{t[r]=n=>{let s=i[r](e,n);if(s)throw new p(r,n,e,s)},t.not[r]=n=>{if(i[r](e,n)===!1)throw new p(r,n,e,`Expected ${JSON.stringify(e)} not ${r.replace(/[A-Z]/g,a=>` ${a.toLowerCase()}`)}${typeof n!="undefined"?" "+JSON.stringify(n):""}`)}}),t}function l(e){e.forEach(({title:t,passed:r,skipped:n,error:s})=>{if(r)return console.info("[32m",`\u2713 ${t}`);if(n)return console.info("[33m",`\u25A1 ${t}`);if(!r)return console.error("[31m",`\u{10102} ${t}`,`
  Failed:`,s.message)}),console.log("[0m")}window.tinyJest=c;})();
//# sourceMappingURL=bundle.js.map
